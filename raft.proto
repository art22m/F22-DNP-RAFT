syntax = "proto3";

service RaftService {
    rpc requestVote(VoteRequest) returns (VoteReply) {}
    rpc appendEntries(AppendRequest) returns (AppendReply) {}
    rpc getLeader(EmptyMessage) returns (GetLeaderReply) {}
    rpc suspend(SuspendRequest) returns (EmptyMessage) {}
}

// Election Vote

message VoteRequest {
    int64 term = 1; // Candidate's term.
    int64 candidateId = 2;
}

message VoteReply {
     int64 term = 1; // Term number of the server
     bool result = 2; // Result of voting (True/False)
}

// AppendEntries (Only Heartbeats for this lab)

message AppendRequest {
    int64 term = 1; // Current term number from the leader
    int64 leaderId = 2; // Leader's id. So that the follower knows who his leader is
}

message AppendReply {
    int64 term = 1;
    bool success = 2;
}

// GetLeader (Called by the client)

message GetLeaderReply {
    int64 leaderId = 1;
    string address = 2;
}

// Suspend (Called by the client)

message SuspendRequest {
    int64 period = 1;
}

// Helpers

message EmptyMessage {}